apply plugin: 'eclipse'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:2.6'
    }
}

def dockerHost = "https://localhost:2376"
if (null != System.getenv("DOCKER_HOST"))
{
    dockerHost = System.getenv('DOCKER_HOST')

    if (dockerHost.indexOf('tcp') == 0)
    {
        dockerHost = dockerHost.replace('tcp','https')
    }
}

def dockerCertPath = ""
if (null != System.getenv('DOCKER_CERT_PATH')){
    dockerCertPath = System.getenv('DOCKER_CERT_PATH')
}

def localEnvironment = ["LICENSE=accept",
            "REGISTRATION_SECRET=" + System.getenv('REGISTRATION_SECRET'),
            "QUERY_SECRET=" + System.getenv('QUERY_SECRET'),
            "MAP_HTTPS_PORT=" + System.getenv('MAP_HTTPS_PORT')]

def etcdEnvironment = ["LICENSE=accept", "ETCDCTL_ENDPOINT=http://etcd:4001"]

task copyApplication(type: Copy) {
    from '../map-app/build/libs/map-app-1.0.war'
    into 'servers/gameon-map/apps/'
    rename("map-app-1.0.war", "map-app.war")
}

task copyCouchdb(type: Sync) {
    from '../map-app/build/libs/'
    into 'servers/gameon-map/lib/'
    include '*.jar'
    exclude 'map-*'
}

task build(dependsOn: ['copyApplication', 'copyCouchdb']){
}

apply plugin: 'com.bmuschko.docker-remote-api'

import com.bmuschko.gradle.docker.tasks.container.*
import com.bmuschko.gradle.docker.tasks.image.*

docker {
    url = dockerHost
    certPath = new File(dockerCertPath)
}

task buildDockerImage(type: DockerBuildImage, dependsOn: ['copyApplication', 'copyCouchdb']) {
    inputDir = file('.')
    tag = 'gameon-map'
    quiet = false
}

task stopCurrentContainer(type: DockerStopContainer) {
    targetContainerId { "gameon-map" }
    timeout 0
}

task removeCurrentContainer(type: DockerRemoveContainer) {
    targetContainerId { "gameon-map" }
}

task createNewContainer(type: DockerCreateContainer) {
    targetImageId { "gameon-map" }
    containerName = "gameon-map"
    portBindings = ['9447:9443']
    links = ['couchdb:couchdb']
    env = localEnvironment
}

task startNewContainer(type: DockerStartContainer) {
    dependsOn createNewContainer
    targetContainerId { "gameon-map" }
}

task createNewEtcdContainer(type: DockerCreateContainer) {
    targetImageId { "gameon-map" }
    containerName = "gameon-map"
    portBindings = ['9447:9443']
    env = etcdEnvironment
    links = ['etcd:etcd', 'couchdb:couchdb']
}

task startNewEtcdContainer(type: DockerStartContainer) {
    dependsOn createNewEtcdContainer
    targetContainerId { "gameon-map" }
}
